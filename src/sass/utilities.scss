// Função para converter pixels para rem
@function px-to-rem($value, $base-font-size: 16) {
  // Certifique-se de que o valor seja uma unidade semântica (px)
  @if (unit($value) != 'px') {
    @warn "O valor fornecido deve ser em pixels (px).";
    @return $value;
  }

  // Calcule o valor em rem
  @return ($value / $base-font-size) * 1rem;
}

@mixin flex(
  $direction: row,
  $justify: flex-start,
  $align: stretch,
  $wrap: nowrap
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Utilitário para configurar um contêiner flex
.flex {
  &.row {
    display: flex;
    flex-direction: row;
  }

  &.flex-col {
    display: flex;
    flex-direction: column;
  }

  &.justify-center {
    justify-content: center;
  }

  &.justify-between {
    justify-content: space-between;
  }

  &.align-center {
    align-items: center;
  }

  &.align-start {
    align-items: flex-start;
  }

  &.align-end {
    align-items: flex-end;
  }

  &.wrap {
    flex-wrap: wrap;
  }

  // Pode adicionar mais classes conforme necessário
}

// Utilitário para configurar um item flex
.flex-item {
  &.flex-1 {
    flex: 1;
  }

  &.flex-2 {
    flex: 2;
  }

  &.flex-3 {
    flex: 3;
  }

  &.align-self-center {
    align-self: center;
  }

  &.align-self-start {
    align-self: flex-start;
  }

  &.align-self-end {
    align-self: flex-end;
  }

  // Pode adicionar mais classes conforme necessário
}
